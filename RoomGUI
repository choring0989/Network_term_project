package myPackage;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

public class RoomGUI {
	BufferedReader in;
	PrintWriter out;
	JFrame startFrame = new JFrame();
	JFrame frame = new JFrame("Who is Mafia?");
	ImageIcon room = new ImageIcon("room2.jpg");
	Image newImage = room.getImage();
	Image changedImage = newImage.getScaledInstance(500,300,Image.SCALE_SMOOTH);
	ImageIcon newRoom = new ImageIcon(changedImage);
	JTextField textField = new JTextField(30);
	JTextArea messageArea = new JTextArea(4,20);
	JPanel panel = new JPanel(){
		public void paintComponent(Graphics g)
		{
			g.drawImage(newRoom.getImage(),100,100,null);
		}
	};
	public RoomGUI()
	{
		
		panel.setLayout(new BorderLayout());
		panel.add(textField,"South");
		panel.add(messageArea,"East");
		panel.setVisible(true);
		frame.getContentPane().add(panel);
		frame.setVisible(true);
		frame.setBounds(0, 0, 1920, 900);
	    
	}
	public void setObject(ImageIcon object)
	{
		JButton button = new JButton(object);
		button.setBounds((int)(4/5*1000*(Math.random())),(int)(4/5*1000*(Math.random())),3,3);
		button.setBackground(Color.red); 
        button.setBorderPainted(false); 
        button.setFocusPainted(false); 
        button.setContentAreaFilled(false);
		panel.add(button);
		panel.setVisible(true);
		frame.setVisible(true);
		
	}
	 private class TheHandler implements ActionListener { 
	        public void actionPerformed(ActionEvent event) {
	        	JOptionPane.showMessageDialog(
		        				frame,
		        				"Message",
		        				"Object Message",
		        				1);
	    }
	        }
	 private String getServerAddress() {
	        return JOptionPane.showInputDialog(
	            startFrame,
	            "Enter IP Address of the Server:",
	            "Welcome to the Chatter",
	            JOptionPane.QUESTION_MESSAGE);
	    }

	    /**
	     * Prompt for and return the desired screen name.
	     */
	    private String getName() {
	        return JOptionPane.showInputDialog(
	            startFrame,
	            "Choose a screen name:",
	            "Screen name selection",
	            JOptionPane.PLAIN_MESSAGE);
	    }
	    private void run() throws IOException {

	        // Make connection and initialize streams
	        String serverAddress = getServerAddress();
	        Socket socket = new Socket(serverAddress, 9001);
	        in = new BufferedReader(new InputStreamReader(
	            socket.getInputStream()));
	        out = new PrintWriter(socket.getOutputStream(), true);

	        // Process all messages from server, according to the protocol.
	       
	        while (true) {
	            String line = in.readLine();
	            
	            if (line.startsWith("SUBMITNAME")) {
	                out.println(getName());
	               
	            }else if (line.startsWith("NAMEACCEPTED")) {
	                textField.setEditable(true);
	                
	            } else if (line.startsWith("MESSAGE")) {
	                messageArea.append(line.substring(8) + "\n");
	            } else if(line.startsWith("WHISPER")){
	            	messageArea.append(line.substring(7) + "\n");
	            } else
	            	messageArea.append(line + "\n");
	            
	       }
	        
	        
	    }

	
	public static void main(String args[]) throws Exception
	{
		RoomGUI start = new RoomGUI();
		
		//start.run();
		ImageIcon key = new ImageIcon("key.png");
		ImageIcon picture = new ImageIcon("object.png");
		start.setObject(key);
		start.setObject(picture);
		System.out.println();
		
	}
}
